<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-2.5.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
    http://www.springframework.org/schema/context classpath:org/springframework/context/config/spring-context-2.5.xsd">

    <!-- the TCP server -->
    <bean id="networkServer" class= "com.flipkart.phantom.runtime.impl.server.netty.TCPNettyServer">
        <property name="portNumber" value="8080"/>
        <property name="defaultChannelGroup" ref="defaultChannelGroup"/>
        <property name="pipelineFactory" ref="httpChannelPipelineFactory"/>
        <property name="bootstrapOptions">
            <map>
                <entry key="child.tcpNoDelay" value="true"/>
                <entry key="child.keepAlive" value="true"/>
            </map>
        </property>
    </bean>


    <!--  ChannelHandlerPipelineFactory for TCP Server -->
    <bean id="httpChannelPipelineFactory" class="com.flipkart.phantom.runtime.impl.server.netty.ChannelHandlerPipelineFactory">
        <property name="channelHandlerBeanNamesMap">
            <map>
                <entry key="httpDecoder" value="httpDecoder" />
                <entry key="httpChunkAggregator" value="httpChunkAggregator" />
                <entry key="httpRequestHandler" value="httpRequestHandler"/>
                <entry key="httpEncoder" value="httpEncoder" />
            </map>
        </property>
    </bean>

    <!-- Prototype scope command ChannelHandler beans. All channel handler beans MUST be of prototype bean scope-->
    <bean id="httpDecoder" class="org.jboss.netty.handler.codec.http.HttpRequestDecoder" scope="prototype" />
    <bean id="httpEncoder" class="org.jboss.netty.handler.codec.http.HttpResponseEncoder" scope="prototype" />
    <bean id="httpChunkAggregator" class="org.jboss.netty.handler.codec.http.HttpChunkAggregator" scope="prototype">
        <constructor-arg value="1048576" />
    </bean>
    <bean id="httpRequestHandler" class="com.flipkart.phantom.runtime.impl.server.netty.handler.http.MethodRoutingHttpChannelHandler" scope="prototype">
        <property name="repository" ref="httpProxyRepository"/>
        <property name="defaultProxy" value="defaultProxy" />
		<property name="proxyMap">
        	<map>
            	<entry key="GET" value="listingProxy" />
            	<entry key="POST" value="updateProxy" />
        	</map> 
    	</property>
        <property name="eventProducer" ref="serviceProxyEventProducer"/>
        <property name="eventDispatchingSpanCollector" ref="eventDispatchingSpanCollector"/>
        <property name="traceFilter">
            <bean class="com.github.kristofa.brave.FixedSampleRateTraceFilter">
				<constructor-arg index="0" value="1"/>                
            </bean>
        </property>
    </bean>

    <!-- The executor repository for handling requests to HttpProxy -->
    <bean id="httpProxyRepository" class="com.flipkart.phantom.http.impl.HttpProxyExecutorRepository">
        <property name="taskContext" ref="taskContext" />
        <property name="registry" ref="httpProxyRegistry" />
        <property name="eventDispatchingSpanCollector" ref="eventDispatchingSpanCollector"/>
    </bean>

    <!-- the registry of HttpProxies -->
    <bean id="httpProxyRegistry" class="com.flipkart.phantom.http.impl.registry.HttpProxyRegistry" />

    <!-- Task Handler Event Publishers & Consumers-->

    <!--This event producer bean is declared primarily for using in ServiceProxyEvent Producer-->
    <bean id="endpointEventProducer" class="org.trpr.platform.core.impl.event.EndpointEventProducerImpl">
        <property name="defaultEndpointURI" value="evt://com.flipkart.phantom.events.ALL"/>
    </bean>

    <!--This event producer bean is declared primarily for publishing Service Proxy Events-->
    <bean id="serviceProxyEventProducer" class="com.flipkart.phantom.event.ServiceProxyEventProducer">
        <!--Current implementation publishes events to endpoints based on Handlers. Nothing is published to ALL-->
        <property name="eventProducer" ref="endpointEventProducer"/>
    </bean>

    <!--This bean corresponds to consumer of Service Proxy Events which listens to all event types and logs errors-->
    <bean id="errorRequestLogger" class="com.flipkart.phantom.event.consumer.RequestLogger">
        <property name="subscriptions">
            <list>
                <value>evt://com.flipkart.phantom.events.TASK_HANDLER</value>
                <value>evt://com.flipkart.phantom.events.THRIFT_HANDLER</value>
                <value>evt://com.flipkart.phantom.events.HTTP_HANDLER</value>
                <value>evt://com.flipkart.phantom.events.COMMAND_HANDLER</value>
                <value>evt://com.flipkart.phantom.events.ASYNC_COMMAND_HANDLER</value>
            </list>
        </property>
    </bean>
    <!-- Task Handler Event Publishers & Consumers-->

</beans>
